<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="21" xmlns:dc="http://purl.org/dc/elements/1.1/" styles="unlocked" fileformat="1.0" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.99.2" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-US; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.date_last_changed">Sun Apr 14 17:37:31 2019
</m>
<m key="abiword.generator">AbiWord</m>
<m key="dc.creator">Evan Buss</m>
<m key="dc.date">Sun Apr 14 16:47:39 2019
</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
</rdf>
<history version="19" edit-time="3075" last-saved="1555277851" uid="5939ec4a-5ef6-11e9-89fd-dafa23cf739f">
<version id="19" started="1555274859" uid="82137166-5efd-11e9-89fd-dafa23cf739f" auto="0" top-xid="2"/>
</history>
<styles>
<s type="P" name="Normal" followedby="Current Settings" props="font-family:Times New Roman; margin-top:0pt; color:000000; margin-left:0pt; text-position:normal; widows:2; font-style:normal; text-indent:0in; font-variant:normal; font-weight:normal; margin-right:0pt; font-size:12pt; text-decoration:none; margin-bottom:0pt; line-height:1.0; bgcolor:transparent; text-align:left; font-stretch:normal"/>
</styles>
<pagesize pagetype="Letter" orientation="portrait" width="8.500000" height="11.000000" units="in" page-scale="1.000000"/>
<section footer="1" header="0" xid="1" props="page-margin-footer:0.5in; page-margin-header:0.5in; page-margin-top:1.0743in">
<p style="Normal" xid="2" props="line-height:2.0"><c props="text-decoration:underline; font-weight:bold">Abstract</c></p>
<p style="Normal" xid="14" props="line-height:2.0"><c props="text-decoration:none; font-weight:normal">	(Write when finished with paper.)</c></p>
<p style="Normal" xid="9" props="line-height:2.0"><c props="text-decoration:underline; font-weight:bold; font-style:normal">Introduction</c></p>
<p style="Normal" xid="15" props="line-height:2.0"><c props="font-weight:normal; text-decoration:none; font-style:normal">	Prim’s Minimum Spanning Tree algorithm is an algorithm in computer science to determine the shortest path between the vertices of a given graph. A minimum spanning tree is a subset of a graph’s edges that connects all of the graph’s vertices, doesn’t contain any cycles, and has the minimum possible total edge weight for the given graph. Minimum spanning trees have been historically used to calculate the minimum amount of wiring necessary to connect a neighborhood to the electric grid. Minimum spanning trees have also been used as a way to generate mazes. While a properly implemented Prim’s algorithm results in the minimum spanning tree regardless, the underlying implementation of the algorithm can vary depending on the data structures chosen. In the following sections, the efficiency of two different implementations of Prim’s algorithm will be tested.</c></p>
<p style="Normal" xid="10" props="line-height:2.0"><c props="font-weight:bold; text-decoration:underline">Implementation</c></p>
<p style="Normal" xid="16" props="line-height:2.0"><c props="text-decoration:none; font-weight:normal">	The most common representations of graphs are matrices and adjacency lists.</c></p>
<p style="Normal" xid="11" props="line-height:2.0"><c props="text-decoration:underline; font-weight:bold">Testing</c></p>
<p style="Normal" xid="17" props="line-height:2.0"><c props="text-decoration:none; font-weight:normal">	The following describes the testing procedures used to evaluate the speed and efficiency of each implementation of Prim’s algorithm.</c></p>
<p style="Normal" xid="12" props="line-height:2.0"><c props="text-decoration:underline; font-weight:bold">Results</c></p>
<p style="Normal" xid="13" props="line-height:2.0"><c props="text-decoration:underline; font-weight:bold">Conclusions</c></p>
<p style="Normal" xid="20" props="line-height:2.0"><c props="text-decoration:underline; font-weight:bold">Citations</c></p>
</section>
<section id="1" listid="0" parentid="0" type="footer" xid="6">
<p xid="7" props="text-align:right"><field type="page_number" xid="8"></field></p>
</section>
<section id="0" listid="0" parentid="0" type="header" xid="3">
<p xid="4" props="text-align:left"><c>Evan Buss				</c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">CSC402 - Data Structures 2			April 19, 2019</c></p>
<p xid="5" props="text-align:left"><c></c></p>
</section>
</abiword>
